{"name": "test_login", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = <bound method HomePage.isexist_logout_ele of <PageObjects.home_page.HomePage object at 0x00000202891785F8>>()\n +    where <bound method HomePage.isexist_logout_ele of <PageObjects.home_page.HomePage object at 0x00000202891785F8>> = <PageObjects.home_page.HomePage object at 0x00000202891785F8>.isexist_logout_ele\n +      where <PageObjects.home_page.HomePage object at 0x00000202891785F8> = HomePage(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b3aa4489c3597f32f618d33c0b349d8\")>)", "trace": "self = <TestCases.LoginMode.test_login.TestLogin object at 0x000002028A006550>\ninit = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b3aa4489c3597f32f618d33c0b349d8\")>, <PageObjects.login_page.LoginPage object at 0x000002028A026CF8>)\n\n    def test_login(self,init):\n        init[1].login(GD.username,GD.password)\n>       assert (HomePage(init[0]).isexist_logout_ele())\nE       assert False\nE        +  where False = <bound method HomePage.isexist_logout_ele of <PageObjects.home_page.HomePage object at 0x00000202891785F8>>()\nE        +    where <bound method HomePage.isexist_logout_ele of <PageObjects.home_page.HomePage object at 0x00000202891785F8>> = <PageObjects.home_page.HomePage object at 0x00000202891785F8>.isexist_logout_ele\nE        +      where <PageObjects.home_page.HomePage object at 0x00000202891785F8> = HomePage(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b3aa4489c3597f32f618d33c0b349d8\")>)\n\nTestCases\\LoginMode\\test_login.py:18: AssertionError"}, "attachments": [{"name": "stderr", "source": "0ad6ff40-9d58-40c7-9e02-d4c9d1b4dd9b-attachment.txt", "type": "text/plain"}], "start": 1598445221718, "stop": 1598445232826, "uuid": "84c395c0-22f3-4f8a-bd1e-087d3a973126", "historyId": "e21161b573f35a2ae3c8a3670c23bfe8", "testCaseId": "1555dfbadb61b703744762a3aa1c4246", "fullName": "TestCases.LoginMode.test_login.TestLogin#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init')"}, {"name": "parentSuite", "value": "TestCases.LoginMode"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-4K88UKG"}, {"name": "thread", "value": "22028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.LoginMode.test_login"}]}